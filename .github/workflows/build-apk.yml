name: Build Luxamine Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install system dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y build-essential git python3-pip python3-setuptools python3-dev
        sudo apt install -y libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg-dev zlib1g-dev
        sudo apt install -y autotools-dev autoconf pkg-config cmake
        sudo apt install -y libtool automake patch

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.36
        pip install kivy[base] kivymd

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: buildozer-global-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

    - name: Cache Buildozer local directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-local-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

    - name: Install Android NDK
      run: |
        echo "Installing Android NDK 25b..."
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653"
        echo "NDK installed successfully"

    - name: Set environment variables
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.9-9/x64" >> $GITHUB_ENV

    - name: Accept Android licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Verify buildozer installation
      run: |
        buildozer --version
        python --version
        java -version

    - name: Build APK with Buildozer
      run: |
        echo "Starting APK build..."
        buildozer android debug --verbose
        echo "APK build completed"

    - name: List generated files
      run: |
        echo "Contents of bin directory:"
        ls -la bin/ || echo "No bin directory found"
        echo "Looking for APK files:"
        find . -name "*.apk" -type f

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: luxamine-android-apk
        path: bin/*.apk
        retention-days: 30

    - name: Get APK info
      run: |
        APK_FILE=$(find bin -name "*.apk" | head -1)
        if [ -f "$APK_FILE" ]; then
          echo "APK_FILE=$APK_FILE" >> $GITHUB_ENV
          echo "APK_SIZE=$(du -h "$APK_FILE" | cut -f1)" >> $GITHUB_ENV
          echo "APK found: $APK_FILE"
          echo "Size: $(du -h "$APK_FILE" | cut -f1)"
        else
          echo "No APK file found!"
          exit 1
        fi

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Luxamine Android v${{ github.run_number }}
        body: |
          ðŸŽ‰ **Luxamine Android APK - Version ${{ github.run_number }}**
          
          ðŸ“± **Application de modification de cartes Mifare Amine**
          
          **FonctionnalitÃ©s :**
          - âœ… DÃ©cryptage automatique des fichiers EML
          - âœ… Modification des valeurs (Version, CrÃ©dit, Date)
          - âœ… Recryptage avec CRC recalculÃ©s
          - âœ… Interface mobile intuitive
          
          **Installation :**
          1. TÃ©lÃ©chargez le fichier APK ci-dessous
          2. Activez "Sources inconnues" sur Android
          3. Installez l'APK
          
          **Taille :** ${{ env.APK_SIZE }}
          **CompatibilitÃ© :** Android 5.0+ (API 21+)
          
          ---
          *CompilÃ© automatiquement via GitHub Actions*
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment PR with APK info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸŽ‰ APK compilÃ© avec succÃ¨s ! TÃ©lÃ©chargez-le depuis les artifacts de cette action.'
          })

    - name: Build summary
      run: |
        echo "## ðŸŽ‰ Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… APK compilÃ© avec succÃ¨s" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“± Fichier: $(basename $APK_FILE)" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“¦ Taille: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ”— Disponible dans les artifacts et releases" >> $GITHUB_STEP_SUMMARY
